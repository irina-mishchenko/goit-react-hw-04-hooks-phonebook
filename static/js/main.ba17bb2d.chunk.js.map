{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","onAddContact","useState","name","setName","number","setNumber","handleChange","event","target","value","reset","className","s","formContainer","formTitle","onSubmit","e","preventDefault","form","autoComplete","formLabel","formInput","type","onChange","formButton","ContactListItem","contact","onDeleteContact","id","contactListItem","onClick","contactListButton","ContactList","contacts","contactList","map","Filter","filterContainer","filterLabel","filterInput","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","window","setItem","stringify","some","toLowerCase","alert","uuidv4","includes","contactId","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba17bb2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__156AT\"};","import { useState } from 'react';\nimport propTypes from 'prop-types';\n\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onAddContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'number':\n        setNumber(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddContact({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.formContainer}>\n      <h2 className={s.formTitle}>Phonebook</h2>\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\n        <label className={s.formLabel}>\n          Name\n          <input\n            className={s.formInput}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <label className={s.formLabel}>\n          Number\n          <input\n            className={s.formInput}\n            type=\"number\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <button type=\"submit\" className={s.formButton}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n\nContactForm.propTypes = {\n  name: propTypes.string.isRequired,\n  number: propTypes.string.isRequired,\n};\n","import propTypes from 'prop-types';\n\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contact, number, onDeleteContact, id }) => {\n  return (\n    <li className={s.contactListItem}>\n      <p className={s.contact}>\n        {contact}: {number}\n      </p>\n      <button\n        onClick={() => onDeleteContact(id)}\n        className={s.contactListButton}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: propTypes.string.isRequired,\n  number: propTypes.number.isRequired,\n  id: propTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import propTypes from 'prop-types';\n\nimport ContactListItem from './ContactListItem/ContactListItem';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ name, id, number }) => {\n        return (\n          <ContactListItem\n            contact={name}\n            number={number}\n            key={id}\n            onDeleteContact={() => onDeleteContact(id)}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: propTypes.arrayOf(propTypes.shape).isRequired,\n};\n\nexport default ContactList;\n","import propTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.filterContainer}>\n      <label className={s.filterLabel}>\n        Find contact\n        <input\n          className={s.filterInput}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: propTypes.string.isRequired,\n  onChange: propTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const identicalName = contacts.some(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n\n    if (identicalName) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    setContacts(contacts => [contact, ...contacts]);\n  };\n\n  const changeFilter = ({ target }) => {\n    setFilter(target.value);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts => {\n      return prevContacts.filter(contact => contact.id !== contactId);\n    });\n  };\n\n  return (\n    <div>\n      <ContactForm onAddContact={addContact} />\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ContactForm_formContainer__19r2z\",\"formTitle\":\"ContactForm_formTitle__3Yf1t\",\"form\":\"ContactForm_form__3uerS\",\"formLabel\":\"ContactForm_formLabel__3p5uJ\",\"formInput\":\"ContactForm_formInput__29jOD\",\"formButton\":\"ContactForm_formButton__2AN28\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__fn2TR\",\"contact\":\"ContactListItem_contact__1iv3W\",\"contactListButton\":\"ContactListItem_contactListButton__1dMmE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__21ImC\",\"filterLabel\":\"Filter_filterLabel__2jRY2\",\"filterInput\":\"Filter_filterInput__3tHm_\"};"],"sourceRoot":""}